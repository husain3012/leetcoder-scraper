generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "cockroachdb"
  url      = env("POSTGRES_PRISMA_URL")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model Announcement {
  id        BigInt                @id(map: "announcement_pkey") @default(autoincrement())
  title     String
  type      announcement_type     @default(INFO)
  content   String?
  createdOn DateTime              @db.Timestamptz(6)
  priority  announcement_priority @default(LOW)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model Group {
  id             BigInt   @id @default(autoincrement())
  name           String
  description    String?
  coverPhoto     String?
  createdByEmail String
  inviteID       String   @unique
  lastAccessed   DateTime @default(now())
  urlSlug        String   @unique
  members           User[]   @relation("GroupToUser")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model LeetcodeInfo {
  id               BigInt  @id @default(autoincrement())
  avatar           String?
  leetcodeUsername String  @unique
  ranking          Int
  streak           Int
  easySolved       Int
  mediumSolved     Int
  hardSolved       Int
  contestAttended  Int?
  contestRanking   Int?
  contestRating    Int?
  User             User    @relation(fields: [leetcodeUsername], references: [leetcodeUsername])
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model User {
  id               BigInt        @id @default(autoincrement())
  email            String        @unique
  name             String
  leetcodeUsername String        @unique
  lastAccessed     DateTime
  lastUpdated      DateTime
  failedRetries    Int           @default(0)
  leetcodeStats     LeetcodeInfo?
  groups            Group[]       @relation("GroupToUser")
}

enum announcement_priority {
  LOW
  MEDIUM
  HIGH
  VERY_HIGH
}

enum announcement_type {
  SUCCESS
  INFO
  WARNING
  ERROR
}
